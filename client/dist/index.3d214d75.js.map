{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-9b1ddc13f09f1e27.js","index.js","../build/contracts/Batches.json"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"0a8ecb283d214d75\";\"use strict\";\r\n\r\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\r\n\r\n/*::\r\nimport type {\r\n  HMRAsset,\r\n  HMRMessage,\r\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\r\ninterface ParcelRequire {\r\n  (string): mixed;\r\n  cache: {|[string]: ParcelModule|};\r\n  hotData: {|[string]: mixed|};\r\n  Module: any;\r\n  parent: ?ParcelRequire;\r\n  isParcelRequire: true;\r\n  modules: {|[string]: [Function, {|[string]: string|}]|};\r\n  HMR_BUNDLE_ID: string;\r\n  root: ParcelRequire;\r\n}\r\ninterface ParcelModule {\r\n  hot: {|\r\n    data: mixed,\r\n    accept(cb: (Function) => void): void,\r\n    dispose(cb: (mixed) => void): void,\r\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\r\n    // decline(): void,\r\n    _acceptCallbacks: Array<(Function) => void>,\r\n    _disposeCallbacks: Array<(mixed) => void>,\r\n  |};\r\n}\r\ninterface ExtensionContext {\r\n  runtime: {|\r\n    reload(): void,\r\n    getURL(url: string): string;\r\n    getManifest(): {manifest_version: number, ...};\r\n  |};\r\n}\r\ndeclare var module: {bundle: ParcelRequire, ...};\r\ndeclare var HMR_HOST: string;\r\ndeclare var HMR_PORT: string;\r\ndeclare var HMR_ENV_HASH: string;\r\ndeclare var HMR_SECURE: boolean;\r\ndeclare var chrome: ExtensionContext;\r\ndeclare var browser: ExtensionContext;\r\ndeclare var __parcel__import__: (string) => Promise<void>;\r\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\r\ndeclare var globalThis: typeof self;\r\ndeclare var ServiceWorkerGlobalScope: Object;\r\n*/\r\nvar OVERLAY_ID = '__parcel__error__overlay__';\r\nvar OldModule = module.bundle.Module;\r\n\r\nfunction Module(moduleName) {\r\n  OldModule.call(this, moduleName);\r\n  this.hot = {\r\n    data: module.bundle.hotData[moduleName],\r\n    _acceptCallbacks: [],\r\n    _disposeCallbacks: [],\r\n    accept: function (fn) {\r\n      this._acceptCallbacks.push(fn || function () {});\r\n    },\r\n    dispose: function (fn) {\r\n      this._disposeCallbacks.push(fn);\r\n    }\r\n  };\r\n  module.bundle.hotData[moduleName] = undefined;\r\n}\r\n\r\nmodule.bundle.Module = Module;\r\nmodule.bundle.hotData = {};\r\nvar checkedAssets\r\n/*: {|[string]: boolean|} */\r\n, assetsToDispose\r\n/*: Array<[ParcelRequire, string]> */\r\n, assetsToAccept\r\n/*: Array<[ParcelRequire, string]> */\r\n;\r\n\r\nfunction getHostname() {\r\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\r\n}\r\n\r\nfunction getPort() {\r\n  return HMR_PORT || location.port;\r\n} // eslint-disable-next-line no-redeclare\r\n\r\n\r\nvar parent = module.bundle.parent;\r\n\r\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\r\n  var hostname = getHostname();\r\n  var port = getPort();\r\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\r\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\r\n\r\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\r\n  // eval may also be disabled via CSP, so do a quick check.\r\n\r\n  var supportsSourceURL = false;\r\n\r\n  try {\r\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\r\n  } catch (err) {\r\n    supportsSourceURL = err.stack.includes('test.js');\r\n  } // $FlowFixMe\r\n\r\n\r\n  ws.onmessage = async function (event\r\n  /*: {data: string, ...} */\r\n  ) {\r\n    checkedAssets = {}\r\n    /*: {|[string]: boolean|} */\r\n    ;\r\n    assetsToAccept = [];\r\n    assetsToDispose = [];\r\n    var data\r\n    /*: HMRMessage */\r\n    = JSON.parse(event.data);\r\n\r\n    if (data.type === 'update') {\r\n      // Remove error overlay if there is one\r\n      if (typeof document !== 'undefined') {\r\n        removeErrorOverlay();\r\n      }\r\n\r\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\r\n\r\n      let handled = assets.every(asset => {\r\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\r\n      });\r\n\r\n      if (handled) {\r\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\r\n\r\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\r\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\r\n        }\r\n\r\n        await hmrApplyUpdates(assets); // Dispose all old assets.\r\n\r\n        let processedAssets = {}\r\n        /*: {|[string]: boolean|} */\r\n        ;\r\n\r\n        for (let i = 0; i < assetsToDispose.length; i++) {\r\n          let id = assetsToDispose[i][1];\r\n\r\n          if (!processedAssets[id]) {\r\n            hmrDispose(assetsToDispose[i][0], id);\r\n            processedAssets[id] = true;\r\n          }\r\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\r\n\r\n\r\n        processedAssets = {};\r\n\r\n        for (let i = 0; i < assetsToAccept.length; i++) {\r\n          let id = assetsToAccept[i][1];\r\n\r\n          if (!processedAssets[id]) {\r\n            hmrAccept(assetsToAccept[i][0], id);\r\n            processedAssets[id] = true;\r\n          }\r\n        }\r\n      } else fullReload();\r\n    }\r\n\r\n    if (data.type === 'error') {\r\n      // Log parcel errors to console\r\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\r\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\r\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\r\n      }\r\n\r\n      if (typeof document !== 'undefined') {\r\n        // Render the fancy html overlay\r\n        removeErrorOverlay();\r\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\r\n\r\n        document.body.appendChild(overlay);\r\n      }\r\n    }\r\n  };\r\n\r\n  ws.onerror = function (e) {\r\n    console.error(e.message);\r\n  };\r\n\r\n  ws.onclose = function () {\r\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\r\n  };\r\n}\r\n\r\nfunction removeErrorOverlay() {\r\n  var overlay = document.getElementById(OVERLAY_ID);\r\n\r\n  if (overlay) {\r\n    overlay.remove();\r\n    console.log('[parcel] ✨ Error resolved');\r\n  }\r\n}\r\n\r\nfunction createErrorOverlay(diagnostics) {\r\n  var overlay = document.createElement('div');\r\n  overlay.id = OVERLAY_ID;\r\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\r\n\r\n  for (let diagnostic of diagnostics) {\r\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\r\n      return `${p}\r\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\r\n${frame.code}`;\r\n    }, '') : diagnostic.stack;\r\n    errorHTML += `\r\n      <div>\r\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\r\n          🚨 ${diagnostic.message}\r\n        </div>\r\n        <pre>${stack}</pre>\r\n        <div>\r\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\r\n        </div>\r\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  errorHTML += '</div>';\r\n  overlay.innerHTML = errorHTML;\r\n  return overlay;\r\n}\r\n\r\nfunction fullReload() {\r\n  if ('reload' in location) {\r\n    location.reload();\r\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\r\n    extCtx.runtime.reload();\r\n  }\r\n}\r\n\r\nfunction getParents(bundle, id)\r\n/*: Array<[ParcelRequire, string]> */\r\n{\r\n  var modules = bundle.modules;\r\n\r\n  if (!modules) {\r\n    return [];\r\n  }\r\n\r\n  var parents = [];\r\n  var k, d, dep;\r\n\r\n  for (k in modules) {\r\n    for (d in modules[k][1]) {\r\n      dep = modules[k][1][d];\r\n\r\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\r\n        parents.push([bundle, k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (bundle.parent) {\r\n    parents = parents.concat(getParents(bundle.parent, id));\r\n  }\r\n\r\n  return parents;\r\n}\r\n\r\nfunction updateLink(link) {\r\n  var newLink = link.cloneNode();\r\n\r\n  newLink.onload = function () {\r\n    if (link.parentNode !== null) {\r\n      // $FlowFixMe\r\n      link.parentNode.removeChild(link);\r\n    }\r\n  };\r\n\r\n  newLink.setAttribute('href', // $FlowFixMe\r\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\r\n\r\n  link.parentNode.insertBefore(newLink, link.nextSibling);\r\n}\r\n\r\nvar cssTimeout = null;\r\n\r\nfunction reloadCSS() {\r\n  if (cssTimeout) {\r\n    return;\r\n  }\r\n\r\n  cssTimeout = setTimeout(function () {\r\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\r\n\r\n    for (var i = 0; i < links.length; i++) {\r\n      // $FlowFixMe[incompatible-type]\r\n      var href\r\n      /*: string */\r\n      = links[i].getAttribute('href');\r\n      var hostname = getHostname();\r\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\r\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\r\n\r\n      if (!absolute) {\r\n        updateLink(links[i]);\r\n      }\r\n    }\r\n\r\n    cssTimeout = null;\r\n  }, 50);\r\n}\r\n\r\nfunction hmrDownload(asset) {\r\n  if (asset.type === 'js') {\r\n    if (typeof document !== 'undefined') {\r\n      let script = document.createElement('script');\r\n      script.src = asset.url + '?t=' + Date.now();\r\n\r\n      if (asset.outputFormat === 'esmodule') {\r\n        script.type = 'module';\r\n      }\r\n\r\n      return new Promise((resolve, reject) => {\r\n        var _document$head;\r\n\r\n        script.onload = () => resolve(script);\r\n\r\n        script.onerror = reject;\r\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\r\n      });\r\n    } else if (typeof importScripts === 'function') {\r\n      // Worker scripts\r\n      if (asset.outputFormat === 'esmodule') {\r\n        return __parcel__import__(asset.url + '?t=' + Date.now());\r\n      } else {\r\n        return new Promise((resolve, reject) => {\r\n          try {\r\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\r\n\r\n            resolve();\r\n          } catch (err) {\r\n            reject(err);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nasync function hmrApplyUpdates(assets) {\r\n  global.parcelHotUpdate = Object.create(null);\r\n  let scriptsToRemove;\r\n\r\n  try {\r\n    // If sourceURL comments aren't supported in eval, we need to load\r\n    // the update from the dev server over HTTP so that stack traces\r\n    // are correct in errors/logs. This is much slower than eval, so\r\n    // we only do it if needed (currently just Safari).\r\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\r\n    // This path is also taken if a CSP disallows eval.\r\n    if (!supportsSourceURL) {\r\n      let promises = assets.map(asset => {\r\n        var _hmrDownload;\r\n\r\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\r\n          // Web extension bugfix for Chromium\r\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\r\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\r\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\r\n              extCtx.runtime.reload();\r\n              return;\r\n            }\r\n\r\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\r\n            return hmrDownload(asset);\r\n          }\r\n\r\n          throw err;\r\n        });\r\n      });\r\n      scriptsToRemove = await Promise.all(promises);\r\n    }\r\n\r\n    assets.forEach(function (asset) {\r\n      hmrApply(module.bundle.root, asset);\r\n    });\r\n  } finally {\r\n    delete global.parcelHotUpdate;\r\n\r\n    if (scriptsToRemove) {\r\n      scriptsToRemove.forEach(script => {\r\n        if (script) {\r\n          var _document$head2;\r\n\r\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction hmrApply(bundle\r\n/*: ParcelRequire */\r\n, asset\r\n/*:  HMRAsset */\r\n) {\r\n  var modules = bundle.modules;\r\n\r\n  if (!modules) {\r\n    return;\r\n  }\r\n\r\n  if (asset.type === 'css') {\r\n    reloadCSS();\r\n  } else if (asset.type === 'js') {\r\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\r\n\r\n    if (deps) {\r\n      if (modules[asset.id]) {\r\n        // Remove dependencies that are removed and will become orphaned.\r\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\r\n        let oldDeps = modules[asset.id][1];\r\n\r\n        for (let dep in oldDeps) {\r\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\r\n            let id = oldDeps[dep];\r\n            let parents = getParents(module.bundle.root, id);\r\n\r\n            if (parents.length === 1) {\r\n              hmrDelete(module.bundle.root, id);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (supportsSourceURL) {\r\n        // Global eval. We would use `new Function` here but browser\r\n        // support for source maps is better with eval.\r\n        (0, eval)(asset.output);\r\n      } // $FlowFixMe\r\n\r\n\r\n      let fn = global.parcelHotUpdate[asset.id];\r\n      modules[asset.id] = [fn, deps];\r\n    } else if (bundle.parent) {\r\n      hmrApply(bundle.parent, asset);\r\n    }\r\n  }\r\n}\r\n\r\nfunction hmrDelete(bundle, id) {\r\n  let modules = bundle.modules;\r\n\r\n  if (!modules) {\r\n    return;\r\n  }\r\n\r\n  if (modules[id]) {\r\n    // Collect dependencies that will become orphaned when this module is deleted.\r\n    let deps = modules[id][1];\r\n    let orphans = [];\r\n\r\n    for (let dep in deps) {\r\n      let parents = getParents(module.bundle.root, deps[dep]);\r\n\r\n      if (parents.length === 1) {\r\n        orphans.push(deps[dep]);\r\n      }\r\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\r\n\r\n\r\n    delete modules[id];\r\n    delete bundle.cache[id]; // Now delete the orphans.\r\n\r\n    orphans.forEach(id => {\r\n      hmrDelete(module.bundle.root, id);\r\n    });\r\n  } else if (bundle.parent) {\r\n    hmrDelete(bundle.parent, id);\r\n  }\r\n}\r\n\r\nfunction hmrAcceptCheck(bundle\r\n/*: ParcelRequire */\r\n, id\r\n/*: string */\r\n, depsByBundle\r\n/*: ?{ [string]: { [string]: string } }*/\r\n) {\r\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\r\n    return true;\r\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\r\n\r\n\r\n  let parents = getParents(module.bundle.root, id);\r\n  let accepted = false;\r\n\r\n  while (parents.length > 0) {\r\n    let v = parents.shift();\r\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\r\n\r\n    if (a) {\r\n      // If this parent accepts, stop traversing upward, but still consider siblings.\r\n      accepted = true;\r\n    } else {\r\n      // Otherwise, queue the parents in the next level upward.\r\n      let p = getParents(module.bundle.root, v[1]);\r\n\r\n      if (p.length === 0) {\r\n        // If there are no parents, then we've reached an entry without accepting. Reload.\r\n        accepted = false;\r\n        break;\r\n      }\r\n\r\n      parents.push(...p);\r\n    }\r\n  }\r\n\r\n  return accepted;\r\n}\r\n\r\nfunction hmrAcceptCheckOne(bundle\r\n/*: ParcelRequire */\r\n, id\r\n/*: string */\r\n, depsByBundle\r\n/*: ?{ [string]: { [string]: string } }*/\r\n) {\r\n  var modules = bundle.modules;\r\n\r\n  if (!modules) {\r\n    return;\r\n  }\r\n\r\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\r\n    // If we reached the root bundle without finding where the asset should go,\r\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\r\n    if (!bundle.parent) {\r\n      return true;\r\n    }\r\n\r\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\r\n  }\r\n\r\n  if (checkedAssets[id]) {\r\n    return true;\r\n  }\r\n\r\n  checkedAssets[id] = true;\r\n  var cached = bundle.cache[id];\r\n  assetsToDispose.push([bundle, id]);\r\n\r\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\r\n    assetsToAccept.push([bundle, id]);\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction hmrDispose(bundle\r\n/*: ParcelRequire */\r\n, id\r\n/*: string */\r\n) {\r\n  var cached = bundle.cache[id];\r\n  bundle.hotData[id] = {};\r\n\r\n  if (cached && cached.hot) {\r\n    cached.hot.data = bundle.hotData[id];\r\n  }\r\n\r\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\r\n    cached.hot._disposeCallbacks.forEach(function (cb) {\r\n      cb(bundle.hotData[id]);\r\n    });\r\n  }\r\n\r\n  delete bundle.cache[id];\r\n}\r\n\r\nfunction hmrAccept(bundle\r\n/*: ParcelRequire */\r\n, id\r\n/*: string */\r\n) {\r\n  // Execute the module.\r\n  bundle(id); // Run the accept callbacks in the new version of the module.\r\n\r\n  var cached = bundle.cache[id];\r\n\r\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\r\n    cached.hot._acceptCallbacks.forEach(function (cb) {\r\n      var assetsToAlsoAccept = cb(function () {\r\n        return getParents(module.bundle.root, id);\r\n      });\r\n\r\n      if (assetsToAlsoAccept && assetsToAccept.length) {\r\n        assetsToAlsoAccept.forEach(function (a) {\r\n          hmrDispose(a[0], a[1]);\r\n        }); // $FlowFixMe[method-unbinding]\r\n\r\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\r\n      }\r\n    });\r\n  }\r\n}","import Web3 from 'web3';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport configuration from '../build/contracts/Batches.json';\r\n\r\nconst CONTRACT_ADDRESS = configuration.networks['5777'].address;\r\nconst CONTRACT_ABI = configuration.abi;\r\n\r\nconst web3 = new Web3(\r\n    Web3.givenProvider || 'http://127.0.0.1:7545'\r\n);\r\n\r\nconst contract = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\nlet account;\r\n\r\nconst accountEl = document.getElementById('account');\r\nconst batchesEl = document.getElementById('batches');\r\ndocument.getElementById(\"button1\").onclick = createBat;\r\n\r\nasync function createBat() {\r\n    const batchNum = parseInt(document.getElementById('inputBatch').value);\r\n    console.log(batchNum);\r\n    await contract.methods._createBatch(batchNum).send({from:account});\r\n    console.log(\"done\")\r\n}\r\n\r\n\r\nconst main = async () => {\r\n    const accounts = await web3.eth.requestAccounts();\r\n    account = accounts[0];\r\n    accountEl.innerText = account;\r\n};\r\n\r\nmain();","{\r\n  \"contractName\": \"Batches\",\r\n  \"abi\": [\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"batches\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"batchNumber\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"ownerAddress\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\",\r\n      \"constant\": true\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"owner\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\",\r\n      \"constant\": true\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"_batchNumber\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"_createBatch\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"function\"\r\n    }\r\n  ],\r\n  \"metadata\": \"{\\\"compiler\\\":{\\\"version\\\":\\\"0.8.19+commit.7dd6d404\\\"},\\\"language\\\":\\\"Solidity\\\",\\\"output\\\":{\\\"abi\\\":[{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"_batchNumber\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"_createBatch\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"batches\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"batchNumber\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"ownerAddress\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"owner\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}],\\\"devdoc\\\":{\\\"kind\\\":\\\"dev\\\",\\\"methods\\\":{},\\\"version\\\":1},\\\"userdoc\\\":{\\\"kind\\\":\\\"user\\\",\\\"methods\\\":{},\\\"version\\\":1}},\\\"settings\\\":{\\\"compilationTarget\\\":{\\\"project:/contracts/Batches.sol\\\":\\\"Batches\\\"},\\\"evmVersion\\\":\\\"paris\\\",\\\"libraries\\\":{},\\\"metadata\\\":{\\\"bytecodeHash\\\":\\\"ipfs\\\"},\\\"optimizer\\\":{\\\"enabled\\\":false,\\\"runs\\\":200},\\\"remappings\\\":[]},\\\"sources\\\":{\\\"project:/contracts/Batches.sol\\\":{\\\"keccak256\\\":\\\"0x42f2aaddd9bcf845fa3540949878ebdf8a57f98d5e98dfa44369cffec8053932\\\",\\\"license\\\":\\\"SEE LICENSE IN LICENSE\\\",\\\"urls\\\":[\\\"bzz-raw://0a96b52a2550b31d6a039cef65c52704e5a77f67ad170986480f27a31dd76f45\\\",\\\"dweb:/ipfs/QmWDsXriqeTAmN2LwSSV46VvWHHYiR3DZWysmexSkiDfMA\\\"]}},\\\"version\\\":1}\",\r\n  \"bytecode\": \"0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b50610307806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e00e43d146100465780638da5cb5b14610062578063b32c4d8d14610080575b600080fd5b610060600480360381019061005b9190610210565b6100b1565b005b61006a61015d565b604051610077919061027e565b60405180910390f35b61009a60048036038101906100959190610210565b610181565b6040516100a89291906102a8565b60405180910390f35b600160405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061019157600080fd5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600080fd5b6000819050919050565b6101ed816101da565b81146101f857600080fd5b50565b60008135905061020a816101e4565b92915050565b600060208284031215610226576102256101d5565b5b6000610234848285016101fb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102688261023d565b9050919050565b6102788161025d565b82525050565b6000602082019050610293600083018461026f565b92915050565b6102a2816101da565b82525050565b60006040820190506102bd6000830185610299565b6102ca602083018461026f565b939250505056fea26469706673582212201280e90a794564ff0cffb00f22bfeccab5c49347ae48f14293f38393f5da293764736f6c63430008130033\",\r\n  \"deployedBytecode\": \"0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632e00e43d146100465780638da5cb5b14610062578063b32c4d8d14610080575b600080fd5b610060600480360381019061005b9190610210565b6100b1565b005b61006a61015d565b604051610077919061027e565b60405180910390f35b61009a60048036038101906100959190610210565b610181565b6040516100a89291906102a8565b60405180910390f35b600160405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061019157600080fd5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600080fd5b6000819050919050565b6101ed816101da565b81146101f857600080fd5b50565b60008135905061020a816101e4565b92915050565b600060208284031215610226576102256101d5565b5b6000610234848285016101fb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102688261023d565b9050919050565b6102788161025d565b82525050565b6000602082019050610293600083018461026f565b92915050565b6102a2816101da565b82525050565b60006040820190506102bd6000830185610299565b6102ca602083018461026f565b939250505056fea26469706673582212201280e90a794564ff0cffb00f22bfeccab5c49347ae48f14293f38393f5da293764736f6c63430008130033\",\r\n  \"immutableReferences\": {},\r\n  \"generatedSources\": [],\r\n  \"deployedGeneratedSources\": [\r\n    {\r\n      \"ast\": {\r\n        \"nodeType\": \"YulBlock\",\r\n        \"src\": \"0:2070:15\",\r\n        \"statements\": [\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"47:35:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"57:19:15\",\r\n                  \"value\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"73:2:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"64\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"mload\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"67:5:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"67:9:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"memPtr\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"57:6:15\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"allocate_unbounded\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"memPtr\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"40:6:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"7:75:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"177:28:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"194:1:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"0\"\r\n                      },\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"197:1:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"0\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"revert\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"187:6:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"187:12:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"187:12:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"src\": \"88:117:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"300:28:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"317:1:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"0\"\r\n                      },\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"320:1:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"0\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"revert\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"310:6:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"310:12:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"310:12:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"src\": \"211:117:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"379:32:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"389:16:15\",\r\n                  \"value\": {\r\n                    \"name\": \"value\",\r\n                    \"nodeType\": \"YulIdentifier\",\r\n                    \"src\": \"400:5:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"cleaned\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"389:7:15\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"cleanup_t_uint256\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"361:5:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"cleaned\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"371:7:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"334:77:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"460:79:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"body\": {\r\n                    \"nodeType\": \"YulBlock\",\r\n                    \"src\": \"517:16:15\",\r\n                    \"statements\": [\r\n                      {\r\n                        \"expression\": {\r\n                          \"arguments\": [\r\n                            {\r\n                              \"kind\": \"number\",\r\n                              \"nodeType\": \"YulLiteral\",\r\n                              \"src\": \"526:1:15\",\r\n                              \"type\": \"\",\r\n                              \"value\": \"0\"\r\n                            },\r\n                            {\r\n                              \"kind\": \"number\",\r\n                              \"nodeType\": \"YulLiteral\",\r\n                              \"src\": \"529:1:15\",\r\n                              \"type\": \"\",\r\n                              \"value\": \"0\"\r\n                            }\r\n                          ],\r\n                          \"functionName\": {\r\n                            \"name\": \"revert\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"519:6:15\"\r\n                          },\r\n                          \"nodeType\": \"YulFunctionCall\",\r\n                          \"src\": \"519:12:15\"\r\n                        },\r\n                        \"nodeType\": \"YulExpressionStatement\",\r\n                        \"src\": \"519:12:15\"\r\n                      }\r\n                    ]\r\n                  },\r\n                  \"condition\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"value\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"483:5:15\"\r\n                          },\r\n                          {\r\n                            \"arguments\": [\r\n                              {\r\n                                \"name\": \"value\",\r\n                                \"nodeType\": \"YulIdentifier\",\r\n                                \"src\": \"508:5:15\"\r\n                              }\r\n                            ],\r\n                            \"functionName\": {\r\n                              \"name\": \"cleanup_t_uint256\",\r\n                              \"nodeType\": \"YulIdentifier\",\r\n                              \"src\": \"490:17:15\"\r\n                            },\r\n                            \"nodeType\": \"YulFunctionCall\",\r\n                            \"src\": \"490:24:15\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"eq\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"480:2:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"480:35:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"iszero\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"473:6:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"473:43:15\"\r\n                  },\r\n                  \"nodeType\": \"YulIf\",\r\n                  \"src\": \"470:63:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"validator_revert_t_uint256\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"453:5:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"417:122:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"597:87:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"607:29:15\",\r\n                  \"value\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"offset\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"629:6:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"calldataload\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"616:12:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"616:20:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"value\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"607:5:15\"\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"value\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"672:5:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"validator_revert_t_uint256\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"645:26:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"645:33:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"645:33:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"abi_decode_t_uint256\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"offset\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"575:6:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"end\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"583:3:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"591:5:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"545:139:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"756:263:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"body\": {\r\n                    \"nodeType\": \"YulBlock\",\r\n                    \"src\": \"802:83:15\",\r\n                    \"statements\": [\r\n                      {\r\n                        \"expression\": {\r\n                          \"arguments\": [],\r\n                          \"functionName\": {\r\n                            \"name\": \"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"804:77:15\"\r\n                          },\r\n                          \"nodeType\": \"YulFunctionCall\",\r\n                          \"src\": \"804:79:15\"\r\n                        },\r\n                        \"nodeType\": \"YulExpressionStatement\",\r\n                        \"src\": \"804:79:15\"\r\n                      }\r\n                    ]\r\n                  },\r\n                  \"condition\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"dataEnd\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"777:7:15\"\r\n                          },\r\n                          {\r\n                            \"name\": \"headStart\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"786:9:15\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"sub\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"773:3:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"773:23:15\"\r\n                      },\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"798:2:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"32\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"slt\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"769:3:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"769:32:15\"\r\n                  },\r\n                  \"nodeType\": \"YulIf\",\r\n                  \"src\": \"766:119:15\"\r\n                },\r\n                {\r\n                  \"nodeType\": \"YulBlock\",\r\n                  \"src\": \"895:117:15\",\r\n                  \"statements\": [\r\n                    {\r\n                      \"nodeType\": \"YulVariableDeclaration\",\r\n                      \"src\": \"910:15:15\",\r\n                      \"value\": {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"924:1:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"0\"\r\n                      },\r\n                      \"variables\": [\r\n                        {\r\n                          \"name\": \"offset\",\r\n                          \"nodeType\": \"YulTypedName\",\r\n                          \"src\": \"914:6:15\",\r\n                          \"type\": \"\"\r\n                        }\r\n                      ]\r\n                    },\r\n                    {\r\n                      \"nodeType\": \"YulAssignment\",\r\n                      \"src\": \"939:63:15\",\r\n                      \"value\": {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"arguments\": [\r\n                              {\r\n                                \"name\": \"headStart\",\r\n                                \"nodeType\": \"YulIdentifier\",\r\n                                \"src\": \"974:9:15\"\r\n                              },\r\n                              {\r\n                                \"name\": \"offset\",\r\n                                \"nodeType\": \"YulIdentifier\",\r\n                                \"src\": \"985:6:15\"\r\n                              }\r\n                            ],\r\n                            \"functionName\": {\r\n                              \"name\": \"add\",\r\n                              \"nodeType\": \"YulIdentifier\",\r\n                              \"src\": \"970:3:15\"\r\n                            },\r\n                            \"nodeType\": \"YulFunctionCall\",\r\n                            \"src\": \"970:22:15\"\r\n                          },\r\n                          {\r\n                            \"name\": \"dataEnd\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"994:7:15\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"abi_decode_t_uint256\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"949:20:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"949:53:15\"\r\n                      },\r\n                      \"variableNames\": [\r\n                        {\r\n                          \"name\": \"value0\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"939:6:15\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"abi_decode_tuple_t_uint256\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"headStart\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"726:9:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"dataEnd\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"737:7:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"value0\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"749:6:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"690:329:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"1070:81:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"1080:65:15\",\r\n                  \"value\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"value\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1095:5:15\"\r\n                      },\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"1102:42:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"0xffffffffffffffffffffffffffffffffffffffff\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"and\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1091:3:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1091:54:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"cleaned\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1080:7:15\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"cleanup_t_uint160\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1052:5:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"cleaned\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1062:7:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"1025:126:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"1202:51:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"1212:35:15\",\r\n                  \"value\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"value\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1241:5:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"cleanup_t_uint160\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1223:17:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1223:24:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"cleaned\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1212:7:15\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"cleanup_t_address\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1184:5:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"cleaned\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1194:7:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"1157:96:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"1324:53:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"pos\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1341:3:15\"\r\n                      },\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"value\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"1364:5:15\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"cleanup_t_address\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"1346:17:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"1346:24:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"mstore\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1334:6:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1334:37:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"1334:37:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"abi_encode_t_address_to_t_address_fromStack\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1312:5:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"pos\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1319:3:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"1259:118:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"1481:124:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"1491:26:15\",\r\n                  \"value\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"headStart\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1503:9:15\"\r\n                      },\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"1514:2:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"32\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"add\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1499:3:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1499:18:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"tail\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1491:4:15\"\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"value0\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1571:6:15\"\r\n                      },\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"headStart\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"1584:9:15\"\r\n                          },\r\n                          {\r\n                            \"kind\": \"number\",\r\n                            \"nodeType\": \"YulLiteral\",\r\n                            \"src\": \"1595:1:15\",\r\n                            \"type\": \"\",\r\n                            \"value\": \"0\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"add\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"1580:3:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"1580:17:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"abi_encode_t_address_to_t_address_fromStack\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1527:43:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1527:71:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"1527:71:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"abi_encode_tuple_t_address__to_t_address__fromStack_reversed\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"headStart\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1453:9:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"value0\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1465:6:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"tail\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1476:4:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"1383:222:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"1676:53:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"pos\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1693:3:15\"\r\n                      },\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"value\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"1716:5:15\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"cleanup_t_uint256\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"1698:17:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"1698:24:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"mstore\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1686:6:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1686:37:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"1686:37:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"abi_encode_t_uint256_to_t_uint256_fromStack\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1664:5:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"pos\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1671:3:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"1611:118:15\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"nodeType\": \"YulBlock\",\r\n              \"src\": \"1861:206:15\",\r\n              \"statements\": [\r\n                {\r\n                  \"nodeType\": \"YulAssignment\",\r\n                  \"src\": \"1871:26:15\",\r\n                  \"value\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"headStart\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1883:9:15\"\r\n                      },\r\n                      {\r\n                        \"kind\": \"number\",\r\n                        \"nodeType\": \"YulLiteral\",\r\n                        \"src\": \"1894:2:15\",\r\n                        \"type\": \"\",\r\n                        \"value\": \"64\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"add\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1879:3:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1879:18:15\"\r\n                  },\r\n                  \"variableNames\": [\r\n                    {\r\n                      \"name\": \"tail\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1871:4:15\"\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"value0\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"1951:6:15\"\r\n                      },\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"headStart\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"1964:9:15\"\r\n                          },\r\n                          {\r\n                            \"kind\": \"number\",\r\n                            \"nodeType\": \"YulLiteral\",\r\n                            \"src\": \"1975:1:15\",\r\n                            \"type\": \"\",\r\n                            \"value\": \"0\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"add\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"1960:3:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"1960:17:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"abi_encode_t_uint256_to_t_uint256_fromStack\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1907:43:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1907:71:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"1907:71:15\"\r\n                },\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"name\": \"value1\",\r\n                        \"nodeType\": \"YulIdentifier\",\r\n                        \"src\": \"2032:6:15\"\r\n                      },\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"name\": \"headStart\",\r\n                            \"nodeType\": \"YulIdentifier\",\r\n                            \"src\": \"2045:9:15\"\r\n                          },\r\n                          {\r\n                            \"kind\": \"number\",\r\n                            \"nodeType\": \"YulLiteral\",\r\n                            \"src\": \"2056:2:15\",\r\n                            \"type\": \"\",\r\n                            \"value\": \"32\"\r\n                          }\r\n                        ],\r\n                        \"functionName\": {\r\n                          \"name\": \"add\",\r\n                          \"nodeType\": \"YulIdentifier\",\r\n                          \"src\": \"2041:3:15\"\r\n                        },\r\n                        \"nodeType\": \"YulFunctionCall\",\r\n                        \"src\": \"2041:18:15\"\r\n                      }\r\n                    ],\r\n                    \"functionName\": {\r\n                      \"name\": \"abi_encode_t_address_to_t_address_fromStack\",\r\n                      \"nodeType\": \"YulIdentifier\",\r\n                      \"src\": \"1988:43:15\"\r\n                    },\r\n                    \"nodeType\": \"YulFunctionCall\",\r\n                    \"src\": \"1988:72:15\"\r\n                  },\r\n                  \"nodeType\": \"YulExpressionStatement\",\r\n                  \"src\": \"1988:72:15\"\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed\",\r\n            \"nodeType\": \"YulFunctionDefinition\",\r\n            \"parameters\": [\r\n              {\r\n                \"name\": \"headStart\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1825:9:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"value1\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1837:6:15\",\r\n                \"type\": \"\"\r\n              },\r\n              {\r\n                \"name\": \"value0\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1845:6:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"returnVariables\": [\r\n              {\r\n                \"name\": \"tail\",\r\n                \"nodeType\": \"YulTypedName\",\r\n                \"src\": \"1856:4:15\",\r\n                \"type\": \"\"\r\n              }\r\n            ],\r\n            \"src\": \"1735:332:15\"\r\n          }\r\n        ]\r\n      },\r\n      \"contents\": \"{\\n\\n    function allocate_unbounded() -> memPtr {\\n        memPtr := mload(64)\\n    }\\n\\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\\n        revert(0, 0)\\n    }\\n\\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\\n        revert(0, 0)\\n    }\\n\\n    function cleanup_t_uint256(value) -> cleaned {\\n        cleaned := value\\n    }\\n\\n    function validator_revert_t_uint256(value) {\\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\\n    }\\n\\n    function abi_decode_t_uint256(offset, end) -> value {\\n        value := calldataload(offset)\\n        validator_revert_t_uint256(value)\\n    }\\n\\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\\n\\n        {\\n\\n            let offset := 0\\n\\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\\n        }\\n\\n    }\\n\\n    function cleanup_t_uint160(value) -> cleaned {\\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\\n    }\\n\\n    function cleanup_t_address(value) -> cleaned {\\n        cleaned := cleanup_t_uint160(value)\\n    }\\n\\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_address(value))\\n    }\\n\\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\\n        tail := add(headStart, 32)\\n\\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\\n\\n    }\\n\\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\\n        mstore(pos, cleanup_t_uint256(value))\\n    }\\n\\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\\n        tail := add(headStart, 64)\\n\\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\\n\\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\\n\\n    }\\n\\n}\\n\",\r\n      \"id\": 15,\r\n      \"language\": \"Yul\",\r\n      \"name\": \"#utility.yul\"\r\n    }\r\n  ],\r\n  \"sourceMap\": \"88:544:13:-:0;;;179:10;156:33;;;;;;;;;;;;;;;;;;;;88:544;;;;;;;;;;;;;;;;\",\r\n  \"deployedSourceMap\": \"88:544:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;156:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;408:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;514:115;576:7;589:31;;;;;;;;595:12;589:31;;;;609:10;589:31;;;;;576:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:115;:::o;156:33::-;;;;;;;;;;;;:::o;408:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:15:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:332::-;1856:4;1894:2;1883:9;1879:18;1871:26;;1907:71;1975:1;1964:9;1960:17;1951:6;1907:71;:::i;:::-;1988:72;2056:2;2045:9;2041:18;2032:6;1988:72;:::i;:::-;1735:332;;;;;:::o\",\r\n  \"source\": \"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity >=0.4.22 <0.9.0;\\r\\n\\r\\ncontract Batches {\\r\\n    //Owner of the invoker of the contract\\r\\n    address public owner = msg.sender;\\r\\n    \\r\\n    //Struct (object) batch contains batchNumber and owner's address\\r\\n    struct Batch {\\r\\n        uint256 batchNumber;\\r\\n        address ownerAddress;\\r\\n    }\\r\\n\\r\\n    //Array of batches that has dynamic size\\r\\n    Batch[] public batches;\\r\\n\\r\\n    //Creates batch, adds to array of batches -> address taken from above\\r\\n    function _createBatch(uint256 _batchNumber) public {\\r\\n        batches.push(Batch(_batchNumber, msg.sender));\\r\\n    }\\r\\n}\",\r\n  \"sourcePath\": \"D:\\\\Grad Project\\\\Project 2\\\\Week2\\\\contracts\\\\Batches.sol\",\r\n  \"ast\": {\r\n    \"absolutePath\": \"project:/contracts/Batches.sol\",\r\n    \"exportedSymbols\": {\r\n      \"Batches\": [\r\n        2859\r\n      ]\r\n    },\r\n    \"id\": 2860,\r\n    \"license\": \"SEE LICENSE IN LICENSE\",\r\n    \"nodeType\": \"SourceUnit\",\r\n    \"nodes\": [\r\n      {\r\n        \"id\": 2829,\r\n        \"literals\": [\r\n          \"solidity\",\r\n          \">=\",\r\n          \"0.4\",\r\n          \".22\",\r\n          \"<\",\r\n          \"0.9\",\r\n          \".0\"\r\n        ],\r\n        \"nodeType\": \"PragmaDirective\",\r\n        \"src\": \"52:32:13\"\r\n      },\r\n      {\r\n        \"abstract\": false,\r\n        \"baseContracts\": [],\r\n        \"canonicalName\": \"Batches\",\r\n        \"contractDependencies\": [],\r\n        \"contractKind\": \"contract\",\r\n        \"fullyImplemented\": true,\r\n        \"id\": 2859,\r\n        \"linearizedBaseContracts\": [\r\n          2859\r\n        ],\r\n        \"name\": \"Batches\",\r\n        \"nameLocation\": \"97:7:13\",\r\n        \"nodeType\": \"ContractDefinition\",\r\n        \"nodes\": [\r\n          {\r\n            \"constant\": false,\r\n            \"functionSelector\": \"8da5cb5b\",\r\n            \"id\": 2833,\r\n            \"mutability\": \"mutable\",\r\n            \"name\": \"owner\",\r\n            \"nameLocation\": \"171:5:13\",\r\n            \"nodeType\": \"VariableDeclaration\",\r\n            \"scope\": 2859,\r\n            \"src\": \"156:33:13\",\r\n            \"stateVariable\": true,\r\n            \"storageLocation\": \"default\",\r\n            \"typeDescriptions\": {\r\n              \"typeIdentifier\": \"t_address\",\r\n              \"typeString\": \"address\"\r\n            },\r\n            \"typeName\": {\r\n              \"id\": 2830,\r\n              \"name\": \"address\",\r\n              \"nodeType\": \"ElementaryTypeName\",\r\n              \"src\": \"156:7:13\",\r\n              \"stateMutability\": \"nonpayable\",\r\n              \"typeDescriptions\": {\r\n                \"typeIdentifier\": \"t_address\",\r\n                \"typeString\": \"address\"\r\n              }\r\n            },\r\n            \"value\": {\r\n              \"expression\": {\r\n                \"id\": 2831,\r\n                \"name\": \"msg\",\r\n                \"nodeType\": \"Identifier\",\r\n                \"overloadedDeclarations\": [],\r\n                \"referencedDeclaration\": 4294967281,\r\n                \"src\": \"179:3:13\",\r\n                \"typeDescriptions\": {\r\n                  \"typeIdentifier\": \"t_magic_message\",\r\n                  \"typeString\": \"msg\"\r\n                }\r\n              },\r\n              \"id\": 2832,\r\n              \"isConstant\": false,\r\n              \"isLValue\": false,\r\n              \"isPure\": false,\r\n              \"lValueRequested\": false,\r\n              \"memberLocation\": \"183:6:13\",\r\n              \"memberName\": \"sender\",\r\n              \"nodeType\": \"MemberAccess\",\r\n              \"src\": \"179:10:13\",\r\n              \"typeDescriptions\": {\r\n                \"typeIdentifier\": \"t_address\",\r\n                \"typeString\": \"address\"\r\n              }\r\n            },\r\n            \"visibility\": \"public\"\r\n          },\r\n          {\r\n            \"canonicalName\": \"Batches.Batch\",\r\n            \"id\": 2838,\r\n            \"members\": [\r\n              {\r\n                \"constant\": false,\r\n                \"id\": 2835,\r\n                \"mutability\": \"mutable\",\r\n                \"name\": \"batchNumber\",\r\n                \"nameLocation\": \"304:11:13\",\r\n                \"nodeType\": \"VariableDeclaration\",\r\n                \"scope\": 2838,\r\n                \"src\": \"296:19:13\",\r\n                \"stateVariable\": false,\r\n                \"storageLocation\": \"default\",\r\n                \"typeDescriptions\": {\r\n                  \"typeIdentifier\": \"t_uint256\",\r\n                  \"typeString\": \"uint256\"\r\n                },\r\n                \"typeName\": {\r\n                  \"id\": 2834,\r\n                  \"name\": \"uint256\",\r\n                  \"nodeType\": \"ElementaryTypeName\",\r\n                  \"src\": \"296:7:13\",\r\n                  \"typeDescriptions\": {\r\n                    \"typeIdentifier\": \"t_uint256\",\r\n                    \"typeString\": \"uint256\"\r\n                  }\r\n                },\r\n                \"visibility\": \"internal\"\r\n              },\r\n              {\r\n                \"constant\": false,\r\n                \"id\": 2837,\r\n                \"mutability\": \"mutable\",\r\n                \"name\": \"ownerAddress\",\r\n                \"nameLocation\": \"334:12:13\",\r\n                \"nodeType\": \"VariableDeclaration\",\r\n                \"scope\": 2838,\r\n                \"src\": \"326:20:13\",\r\n                \"stateVariable\": false,\r\n                \"storageLocation\": \"default\",\r\n                \"typeDescriptions\": {\r\n                  \"typeIdentifier\": \"t_address\",\r\n                  \"typeString\": \"address\"\r\n                },\r\n                \"typeName\": {\r\n                  \"id\": 2836,\r\n                  \"name\": \"address\",\r\n                  \"nodeType\": \"ElementaryTypeName\",\r\n                  \"src\": \"326:7:13\",\r\n                  \"stateMutability\": \"nonpayable\",\r\n                  \"typeDescriptions\": {\r\n                    \"typeIdentifier\": \"t_address\",\r\n                    \"typeString\": \"address\"\r\n                  }\r\n                },\r\n                \"visibility\": \"internal\"\r\n              }\r\n            ],\r\n            \"name\": \"Batch\",\r\n            \"nameLocation\": \"279:5:13\",\r\n            \"nodeType\": \"StructDefinition\",\r\n            \"scope\": 2859,\r\n            \"src\": \"272:82:13\",\r\n            \"visibility\": \"public\"\r\n          },\r\n          {\r\n            \"constant\": false,\r\n            \"functionSelector\": \"b32c4d8d\",\r\n            \"id\": 2842,\r\n            \"mutability\": \"mutable\",\r\n            \"name\": \"batches\",\r\n            \"nameLocation\": \"423:7:13\",\r\n            \"nodeType\": \"VariableDeclaration\",\r\n            \"scope\": 2859,\r\n            \"src\": \"408:22:13\",\r\n            \"stateVariable\": true,\r\n            \"storageLocation\": \"default\",\r\n            \"typeDescriptions\": {\r\n              \"typeIdentifier\": \"t_array$_t_struct$_Batch_$2838_storage_$dyn_storage\",\r\n              \"typeString\": \"struct Batches.Batch[]\"\r\n            },\r\n            \"typeName\": {\r\n              \"baseType\": {\r\n                \"id\": 2840,\r\n                \"nodeType\": \"UserDefinedTypeName\",\r\n                \"pathNode\": {\r\n                  \"id\": 2839,\r\n                  \"name\": \"Batch\",\r\n                  \"nameLocations\": [\r\n                    \"408:5:13\"\r\n                  ],\r\n                  \"nodeType\": \"IdentifierPath\",\r\n                  \"referencedDeclaration\": 2838,\r\n                  \"src\": \"408:5:13\"\r\n                },\r\n                \"referencedDeclaration\": 2838,\r\n                \"src\": \"408:5:13\",\r\n                \"typeDescriptions\": {\r\n                  \"typeIdentifier\": \"t_struct$_Batch_$2838_storage_ptr\",\r\n                  \"typeString\": \"struct Batches.Batch\"\r\n                }\r\n              },\r\n              \"id\": 2841,\r\n              \"nodeType\": \"ArrayTypeName\",\r\n              \"src\": \"408:7:13\",\r\n              \"typeDescriptions\": {\r\n                \"typeIdentifier\": \"t_array$_t_struct$_Batch_$2838_storage_$dyn_storage_ptr\",\r\n                \"typeString\": \"struct Batches.Batch[]\"\r\n              }\r\n            },\r\n            \"visibility\": \"public\"\r\n          },\r\n          {\r\n            \"body\": {\r\n              \"id\": 2857,\r\n              \"nodeType\": \"Block\",\r\n              \"src\": \"565:64:13\",\r\n              \"statements\": [\r\n                {\r\n                  \"expression\": {\r\n                    \"arguments\": [\r\n                      {\r\n                        \"arguments\": [\r\n                          {\r\n                            \"id\": 2851,\r\n                            \"name\": \"_batchNumber\",\r\n                            \"nodeType\": \"Identifier\",\r\n                            \"overloadedDeclarations\": [],\r\n                            \"referencedDeclaration\": 2844,\r\n                            \"src\": \"595:12:13\",\r\n                            \"typeDescriptions\": {\r\n                              \"typeIdentifier\": \"t_uint256\",\r\n                              \"typeString\": \"uint256\"\r\n                            }\r\n                          },\r\n                          {\r\n                            \"expression\": {\r\n                              \"id\": 2852,\r\n                              \"name\": \"msg\",\r\n                              \"nodeType\": \"Identifier\",\r\n                              \"overloadedDeclarations\": [],\r\n                              \"referencedDeclaration\": 4294967281,\r\n                              \"src\": \"609:3:13\",\r\n                              \"typeDescriptions\": {\r\n                                \"typeIdentifier\": \"t_magic_message\",\r\n                                \"typeString\": \"msg\"\r\n                              }\r\n                            },\r\n                            \"id\": 2853,\r\n                            \"isConstant\": false,\r\n                            \"isLValue\": false,\r\n                            \"isPure\": false,\r\n                            \"lValueRequested\": false,\r\n                            \"memberLocation\": \"613:6:13\",\r\n                            \"memberName\": \"sender\",\r\n                            \"nodeType\": \"MemberAccess\",\r\n                            \"src\": \"609:10:13\",\r\n                            \"typeDescriptions\": {\r\n                              \"typeIdentifier\": \"t_address\",\r\n                              \"typeString\": \"address\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        \"expression\": {\r\n                          \"argumentTypes\": [\r\n                            {\r\n                              \"typeIdentifier\": \"t_uint256\",\r\n                              \"typeString\": \"uint256\"\r\n                            },\r\n                            {\r\n                              \"typeIdentifier\": \"t_address\",\r\n                              \"typeString\": \"address\"\r\n                            }\r\n                          ],\r\n                          \"id\": 2850,\r\n                          \"name\": \"Batch\",\r\n                          \"nodeType\": \"Identifier\",\r\n                          \"overloadedDeclarations\": [],\r\n                          \"referencedDeclaration\": 2838,\r\n                          \"src\": \"589:5:13\",\r\n                          \"typeDescriptions\": {\r\n                            \"typeIdentifier\": \"t_type$_t_struct$_Batch_$2838_storage_ptr_$\",\r\n                            \"typeString\": \"type(struct Batches.Batch storage pointer)\"\r\n                          }\r\n                        },\r\n                        \"id\": 2854,\r\n                        \"isConstant\": false,\r\n                        \"isLValue\": false,\r\n                        \"isPure\": false,\r\n                        \"kind\": \"structConstructorCall\",\r\n                        \"lValueRequested\": false,\r\n                        \"nameLocations\": [],\r\n                        \"names\": [],\r\n                        \"nodeType\": \"FunctionCall\",\r\n                        \"src\": \"589:31:13\",\r\n                        \"tryCall\": false,\r\n                        \"typeDescriptions\": {\r\n                          \"typeIdentifier\": \"t_struct$_Batch_$2838_memory_ptr\",\r\n                          \"typeString\": \"struct Batches.Batch memory\"\r\n                        }\r\n                      }\r\n                    ],\r\n                    \"expression\": {\r\n                      \"argumentTypes\": [\r\n                        {\r\n                          \"typeIdentifier\": \"t_struct$_Batch_$2838_memory_ptr\",\r\n                          \"typeString\": \"struct Batches.Batch memory\"\r\n                        }\r\n                      ],\r\n                      \"expression\": {\r\n                        \"id\": 2847,\r\n                        \"name\": \"batches\",\r\n                        \"nodeType\": \"Identifier\",\r\n                        \"overloadedDeclarations\": [],\r\n                        \"referencedDeclaration\": 2842,\r\n                        \"src\": \"576:7:13\",\r\n                        \"typeDescriptions\": {\r\n                          \"typeIdentifier\": \"t_array$_t_struct$_Batch_$2838_storage_$dyn_storage\",\r\n                          \"typeString\": \"struct Batches.Batch storage ref[] storage ref\"\r\n                        }\r\n                      },\r\n                      \"id\": 2849,\r\n                      \"isConstant\": false,\r\n                      \"isLValue\": false,\r\n                      \"isPure\": false,\r\n                      \"lValueRequested\": false,\r\n                      \"memberLocation\": \"584:4:13\",\r\n                      \"memberName\": \"push\",\r\n                      \"nodeType\": \"MemberAccess\",\r\n                      \"src\": \"576:12:13\",\r\n                      \"typeDescriptions\": {\r\n                        \"typeIdentifier\": \"t_function_arraypush_nonpayable$_t_array$_t_struct$_Batch_$2838_storage_$dyn_storage_ptr_$_t_struct$_Batch_$2838_storage_$returns$__$attached_to$_t_array$_t_struct$_Batch_$2838_storage_$dyn_storage_ptr_$\",\r\n                        \"typeString\": \"function (struct Batches.Batch storage ref[] storage pointer,struct Batches.Batch storage ref)\"\r\n                      }\r\n                    },\r\n                    \"id\": 2855,\r\n                    \"isConstant\": false,\r\n                    \"isLValue\": false,\r\n                    \"isPure\": false,\r\n                    \"kind\": \"functionCall\",\r\n                    \"lValueRequested\": false,\r\n                    \"nameLocations\": [],\r\n                    \"names\": [],\r\n                    \"nodeType\": \"FunctionCall\",\r\n                    \"src\": \"576:45:13\",\r\n                    \"tryCall\": false,\r\n                    \"typeDescriptions\": {\r\n                      \"typeIdentifier\": \"t_tuple$__$\",\r\n                      \"typeString\": \"tuple()\"\r\n                    }\r\n                  },\r\n                  \"id\": 2856,\r\n                  \"nodeType\": \"ExpressionStatement\",\r\n                  \"src\": \"576:45:13\"\r\n                }\r\n              ]\r\n            },\r\n            \"functionSelector\": \"2e00e43d\",\r\n            \"id\": 2858,\r\n            \"implemented\": true,\r\n            \"kind\": \"function\",\r\n            \"modifiers\": [],\r\n            \"name\": \"_createBatch\",\r\n            \"nameLocation\": \"523:12:13\",\r\n            \"nodeType\": \"FunctionDefinition\",\r\n            \"parameters\": {\r\n              \"id\": 2845,\r\n              \"nodeType\": \"ParameterList\",\r\n              \"parameters\": [\r\n                {\r\n                  \"constant\": false,\r\n                  \"id\": 2844,\r\n                  \"mutability\": \"mutable\",\r\n                  \"name\": \"_batchNumber\",\r\n                  \"nameLocation\": \"544:12:13\",\r\n                  \"nodeType\": \"VariableDeclaration\",\r\n                  \"scope\": 2858,\r\n                  \"src\": \"536:20:13\",\r\n                  \"stateVariable\": false,\r\n                  \"storageLocation\": \"default\",\r\n                  \"typeDescriptions\": {\r\n                    \"typeIdentifier\": \"t_uint256\",\r\n                    \"typeString\": \"uint256\"\r\n                  },\r\n                  \"typeName\": {\r\n                    \"id\": 2843,\r\n                    \"name\": \"uint256\",\r\n                    \"nodeType\": \"ElementaryTypeName\",\r\n                    \"src\": \"536:7:13\",\r\n                    \"typeDescriptions\": {\r\n                      \"typeIdentifier\": \"t_uint256\",\r\n                      \"typeString\": \"uint256\"\r\n                    }\r\n                  },\r\n                  \"visibility\": \"internal\"\r\n                }\r\n              ],\r\n              \"src\": \"535:22:13\"\r\n            },\r\n            \"returnParameters\": {\r\n              \"id\": 2846,\r\n              \"nodeType\": \"ParameterList\",\r\n              \"parameters\": [],\r\n              \"src\": \"565:0:13\"\r\n            },\r\n            \"scope\": 2859,\r\n            \"src\": \"514:115:13\",\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"virtual\": false,\r\n            \"visibility\": \"public\"\r\n          }\r\n        ],\r\n        \"scope\": 2860,\r\n        \"src\": \"88:544:13\",\r\n        \"usedErrors\": []\r\n      }\r\n    ],\r\n    \"src\": \"52:580:13\"\r\n  },\r\n  \"compiler\": {\r\n    \"name\": \"solc\",\r\n    \"version\": \"0.8.19+commit.7dd6d404.Emscripten.clang\"\r\n  },\r\n  \"networks\": {\r\n    \"5777\": {\r\n      \"events\": {},\r\n      \"links\": {},\r\n      \"address\": \"0x2BE33b7948e31763103f7F57e5e6b7D13c256485\",\r\n      \"transactionHash\": \"0xfa21ffc1d8d2dbd5fb59ec1208fb11349f525da49e77991a923eac2a87f47f69\"\r\n    }\r\n  },\r\n  \"schemaVersion\": \"3.4.13\",\r\n  \"updatedAt\": \"2023-03-22T16:20:48.066Z\",\r\n  \"networkType\": \"ethereum\",\r\n  \"devdoc\": {\r\n    \"kind\": \"dev\",\r\n    \"methods\": {},\r\n    \"version\": 1\r\n  },\r\n  \"userdoc\": {\r\n    \"kind\": \"user\",\r\n    \"methods\": {},\r\n    \"version\": 1\r\n  }\r\n}"],"names":[],"version":3,"file":"index.3d214d75.js.map","sourceRoot":"/__parcel_source_root/"}